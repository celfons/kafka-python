version: '2'
services:
    zookeeper:
        image: 'wurstmeister/zookeeper:latest'
        hostname: zookeeper
        ports:
            - '2181:2181'
    kafka:
        image: 'wurstmeister/kafka:0.10.2.1'
        ports:
            - '9092:9092'
        environment:
            KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
            KAFKA_CREATE_TOPICS: 'mytopic:1:1'
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        depends_on:
            - zookeeper
    namenode:
        image: 'bde2020/hadoop-namenode:1.1.0-hadoop2.8-java8'
        container_name: namenode
        volumes:
            - './data/namenode:/hadoop/dfs/name'
        environment:
            - CLUSTER_NAME=test
        env_file:
            - ./hadoop.env
        ports:
            - '50070:50070'
    datanode:
        image: 'bde2020/hadoop-datanode:1.1.0-hadoop2.8-java8'
        depends_on:
            - namenode
        volumes:
            - './data/datanode:/hadoop/dfs/data'
        env_file:
            - ./hadoop.env
        ports:
            - '50075:50075'
    spark-master:
        image: 'bde2020/spark-master:2.1.0-hadoop2.8-hive-java8'
        container_name: spark-master
        ports:
            - '8080:8080'
            - '7077:7077'
        env_file:
            - ./hadoop.env
    spark-worker:
        image: 'bde2020/spark-worker:2.1.0-hadoop2.8-hive-java8'
        depends_on:
            - spark-master
        environment:
            - 'SPARK_MASTER=spark://spark-master:7077'
        ports:
            - '8081:8081'
        env_file:
            - ./hadoop.env
    hue:
        image: 'bde2020/hdfs-filebrowser:3.11'
        ports:
            - '8088:8088'
        environment:
            - NAMENODE_HOST=namenode
    postgres:
        image: 'postgres:9.6'
        container_name: postgres-docker
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        ports:
            - '5432:5432'
        volumes:
            - './examples/do-this-first/database_user.sql:/docker-entrypoint-initdb.d/database_user.sql'
            - './examples/do-this-first/populate_tables.sql:/docker-entrypoint-initdb.d/populate_tables.sql'
    hive:
        image: 'cloudera/quickstart:latest'
        container_name: hive-docker
        restart: always
        depends_on:
            - postgres
        ports:
            - '8888:8888'
            - '10000:10000'
            - '7180:7180'
            - '8020:8020'
        hostname: quickstart.cloudera
        privileged: true
        tty: true
        command: /usr/bin/docker-quickstart
